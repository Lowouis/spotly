// Prisma configuration file
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String    @id @default(cuid())
  userId             String
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id])

  @@unique([providerId, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  username      String?   @unique
  password      String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @default(now()) @updatedAt
  accounts      Account[]
  sessions      Session[]
  entry         entry[]
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}

model category {
  id          String     @id @default(cuid())
  name        String
  description String?
  comment     String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  resource    resource[]
}

model domain {
  id            String     @id @default(cuid())
  name          String
  code          Int
  address       String
  street_number Int
  country       String
  city          String
  zip           String
  phone         String
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  resource      resource[]
}

enum status {
  BOOKED
  AVAILABLE
  DELAYED
  LOCKED
  WAITING
}

model resource {
  id          String   @id @default(cuid())
  name        String
  description String?
  moderate    Boolean
  domainId    String
  options     option[] @relation("resourceToOption")
  categoryId  String
  status      status   @default(AVAILABLE)
  category    category @relation(fields: [categoryId], references: [id])
  domains     domain   @relation(fields: [domainId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  entry       entry[]
}

model option {
  id         String   @id @default(cuid())
  tag        String
  resourceId String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  resource   resource @relation("resourceToOption", fields: [resourceId], references: [id])
}

model entry {
  id         String   @id @default(cuid())
  resourceId String
  userId     String
  comment    String?
  startDate  DateTime
  endDate    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  resource   resource @relation(fields: [resourceId], references: [id])
  user       User     @relation(fields: [userId], references: [id])
}
